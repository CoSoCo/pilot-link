
## If you have GNU readline 2.0 (all other versions not presently supported)
## you may compile much better command-line support into pilot-debug by
## uncommenting these lines, correcting the libraries and paths if needed.

#RLLIBS  = -lreadline -ltermcap
#RLDEFS  = -DREADLINE_2_0

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
pixdir = ${libdir}/pix
includedir = @includedir@
mandir = @mandir@/man1
srcdir = ./
VPATH = ./

top_builddir = .

PURELINK =
PURIFY =

TCL_LIBS = @TCL_LIBS@
TCL_LIB_SPEC = @TCL_LIB_SPEC@
TCL_INC = @TCL_INC@
TK_LIBS = @TK_LIBS@
TK_LIB_SPEC = @TK_LIB_SPEC@
TK_INC = @TK_INC@
TCLTK_LIBS = @TCLTK_LIBS@

CC = gcc
CXX = gcc
CFLAGS = -g -O2 -fno-strength-reduce -Wall $(RLDEFS) -DLIBDIR=\"$(libdir)\" -I./include -I$(srcdir)/include
# -DDEBUG
CXXFLAGS = -g -O2 -fno-strength-reduce -Wall $(RLDEFS) -DLIBDIR=\"$(libdir)\" -I./include -I$(srcdir)/include
LDFLAGS = 
LIBS = -lsocket -los2
# -lefence
CXXLIBS = -lstdcpp

libcclib = libcc/libpicc.a
cclib = libpicc.a

INSTALL = $(LIBTOOL) @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
YACC = bison -y
RANLIB = ar -s
RM = rm -f
STRIP = strip
SHELL = /bin/sh
CPLIB = cp
EXT = .EXE
SUBMAKE_COMM = $(MAKE) -C libsock -f Makefile.os2
SUBMAKE_COMM_CC = $(MAKE) -C libcc -f Makefile.os2
LIBTOOL = @LIBTOOL@

CCLINK = $(LIBTOOL) --mode=link $(PURELINK) $(PURIFY) $(CC) $(LDFLAGS) $(CFLAGS)
CXXLINK = $(LIBTOOL) --mode=link $(PURELINK) $(PURIFY) $(CXX) $(LDFLAGS) $(CXXFLAGS)

.SUFFIXES: .out .o .cc .c .e .r .f .y .l .s .p

.c.o:
	$(CC) $(CFLAGS) -c $<

.cc.o:
	$(CXX) $(CXXFLAGS) -c $<

CCEXECS = ccexample$(EXT) iambicexample$(EXT)

TCLEXECS = @TCLEXECS@

EXECS = pilot-xfer$(EXT) pilot-file$(EXT) pilot-dedupe$(EXT) pilot-schlep$(EXT)\
		install-memo$(EXT) install-user$(EXT)\
		install-todos$(EXT) pilot-addresses$(EXT) pilot-clip$(EXT)\
		read-ical$(EXT) pilot-mail$(EXT) read-expenses$(EXT)\
		sync-memodir$(EXT) sync-ical$(EXT) $(CCEXECS) \
	    reminders$(EXT) memos$(EXT) addresses$(EXT) read-todos$(EXT)\
		debugsh$(EXT) dlpsh$(EXT) \
		getrom$(EXT) pi-port$(EXT) \
		test-connector$(EXT) test-acceptor$(EXT) $(TCLEXECS)


PERLEXECS = pilot-undelete

PILIB = libsock/libpisock.a
PICCLIB = libcc/libpicc.a

all: submake $(EXECS)

submake $(PILIB) $(PICCLIB):
	$(SUBMAKE_COMM) libpisock.a
	$(SUBMAKE_COMM_CC) libpicc.a

installdirs:
	$(SHELL) ${srcdir}/scripts/mkinstalldirs $(bindir) $(includedir) $(libdir) $(pixdir)

install: $(EXECS) installdirs $(PILIB) $(PICCLIB)
	$(INSTALL_DATA) $(PILIB) $(libdir)/libpisock.a
	if test -f $(PICCLIB); then \
		$(INSTALL_DATA) $(PICCLIB) $(libdir)/libpicc.a; \
	fi
	for p in $(EXECS); do \
		$(INSTALL_PROGRAM) $$p $(bindir)/$$p; \
		$(STRIP) $(bindir)/$$p; \
	done
	for p in $(EXECS) $(PERLEXECS); do \
		$(INSTALL_PROGRAM) $$p $(bindir)/$$p; \
	done
	for h in include/*.h $(srcdir)/include/*.h; do \
		$(INSTALL_DATA) $$h $(includedir)/`basename $$h`; \
	done
	for m in $(srcdir)/man/*; do \
		$(INSTALL_DATA) $$m $(mandir)/`basename $$m`; \
	done
	for p in $(srcdir)/pix/*.gif $(srcdir)/pix/*.xbm; do \
		$(INSTALL_DATA) $$p $(pixdir)/`basename $$p`; \
	done
	$(LIBTOOL) -n --finish $(libdir)

uninstall: $(EXECS)
	-for p in $(EXECS) $(PERLEXECS) pilot-debug; do \
		$(RM) $(bindir)/$$p; \
	done
	-rmdir $(bindir)
	-for h in include/*; do \
		$(RM) $(includedir)/`basename $$h`; \
	done
	-rmdir $(includedir)
	-$(LIBTOOL) $(RM) $(libdir)/libpisock.a
	-$(LIBTOOL) $(RM) $(libdir)/libpicc.a
	-rmdir $(libdir)

install-memo$(EXT): $(PILIB) install-memo.o
	$(CCLINK) install-memo.o $(PILIB) -o $@ $(LIBS)

install-todos$(EXT): $(PILIB) install-todos.o
	$(CCLINK) install-todos.o $(PILIB) -o $@ $(LIBS)

pilot-addresses$(EXT): $(PILIB) pilot-addresses.o
	$(CCLINK) pilot-addresses.o $(PILIB) -o $@ $(LIBS)

pilot-dedupe$(EXT): $(PILIB) pilot-dedupe.o
	$(CCLINK) pilot-dedupe.o $(PILIB) -o $@ $(LIBS)

install-user$(EXT): $(PILIB) install-user.o
	$(CCLINK) install-user.o $(PILIB) -o $@ $(LIBS)

pilot-xfer$(EXT): $(PILIB) pilot-xfer.o
	$(CCLINK) pilot-xfer.o $(PILIB) -o $@ $(LIBS)

pilot-schlep$(EXT): $(PILIB) pilot-schlep.o
	$(CCLINK) pilot-schlep.o $(PILIB) -o $@ $(LIBS)

pilot-mail$(EXT): $(PILIB) pilot-mail.o parsedate.o
	$(CCLINK) pilot-mail.o parsedate.o $(PILIB) -o $@ $(LIBS)

pi-port$(EXT): $(PILIB) pi-port.o
	$(CCLINK) pi-port.o $(PILIB) -o $@ $(LIBS)

pilot-file$(EXT): $(PILIB) pilot-file.o
	$(CCLINK) pilot-file.o $(PILIB) -o $@ $(LIBS)

pilot-clip$(EXT): $(PILIB) pilot-clip.o
	$(CCLINK) pilot-clip.o $(PILIB) -o $@ $(LIBS)

pilot-debug.o: pilot-debug.c Makefile
	$(CC) $(CFLAGS) -c pilot-debug.c

pd-tty.o: pd-tty.c Makefile
	$(CC) $(CFLAGS) -c pd-tty.c

pilot-debug$(EXT): $(PILIB) pilot-debug.o pd-tty.o
	$(CCLINK) pilot-debug.o pd-tty.o $(PILIB) -o $@ $(TCLTK_LIBS) $(RLLIBS) $(LIBS)

reminders$(EXT): $(PILIB) reminders.o
	$(CCLINK) reminders.o $(PILIB) -o $@ $(LIBS)

memos$(EXT): $(PILIB) memos.o
	$(CCLINK) memos.o $(PILIB) -o $@ $(LIBS)

read-todos$(EXT): $(PILIB) read-todos.o
	$(CCLINK) read-todos.o $(PILIB) -o $@ $(LIBS)

read-expenses$(EXT): $(PILIB) read-expenses.o
	$(CCLINK) read-expenses.o $(PILIB) -o $@ $(LIBS)

read-ical$(EXT): $(PILIB) read-ical.o
	$(CCLINK) read-ical.o $(PILIB) -o $@ $(LIBS)

sync-memodir$(EXT): $(PILIB) sync-memodir.o
	$(CCLINK) sync-memodir.o $(PILIB) -o $@ $(LIBS)

sync-ical$(EXT): $(PILIB) sync-ical.o
	$(CCLINK) sync-ical.o $(PILIB) -o $@ $(LIBS)

addresses$(EXT): $(PILIB) addresses.o
	$(CCLINK) addresses.o $(PILIB) -o $@ $(LIBS)

test-connector$(EXT): $(PILIB) test-connector.o
	$(CCLINK) test-connector.o $(PILIB) -o $@ $(LIBS)

test-acceptor$(EXT): $(PILIB) test-acceptor.o
	$(CCLINK) test-acceptor.o $(PILIB) -o $@ $(LIBS)

dlpsh$(EXT): $(PILIB) dlpsh.o
	$(CCLINK) dlpsh.o $(PILIB) -o $@ $(LIBS)

debugsh$(EXT): $(PILIB) debugsh.o
	$(CCLINK) debugsh.o $(PILIB) -o $@ $(LIBS)

ccexample$(EXT): $(PILIB) $(PICCLIB) ccexample.o
	$(CXXLINK) ccexample.o $(PILIB) $(PICCLIB) -o $@ $(CXXLIBS) $(LIBS)

validate$(EXT): $(PILIB) $(PICCLIB) validate.o
	$(CXXLINK) validate.o $(PILIB) $(PICCLIB) -o $@ $(CXXLIBS) $(LIBS)

iambicexample$(EXT): $(PILIB) $(PICCLIB) iambicexample.o
	$(CXXLINK) iambicexample.o $(PILIB) $(PICCLIB) -o $@ $(CXXLIBS) $(LIBS)

getrom$(EXT): $(PILIB) getrom.o
	$(CCLINK) getrom.o $(PILIB) -o $@ $(LIBS)

parsedate.c: parsedate.y
	@echo Expect six shift/reduce conflicts
	$(YACC) parsedate.y
	mv y.tab.c parsedate.c

strip: $(EXECS)
	$(STRIP) $(EXECS)

distclean: clean
	@-p4 edit Makefile.os2 */Makefile.os2 */Makefile.in 2>&1 >> /dev/null
	$(SUBMAKE_COMM) depend
	$(SUBMAKE_COMM_CC) depend
	$(RM) Makefile libsock/Makefile libsock/Makefile.in~ include/pi-config.h
	$(RM) libcc/Makefile libcc/Makefile.in~
	$(RM) config.log config.status config.cache
	$(RM) PiDebug.log 
	-cd Perl5 ; make realclean
	-cd Python ; make clean
	-cd Tcl ; make clean
	$(RM) *~ *.orig */*~ */*.orig
	perl scripts/os2dist.pl
	@-p4 revert `p4 diff -sr Makefile.os2 */Makefile.os2 */Makefile.in` 2>&1 >> /dev/null 

clean:
	$(RM) *.o *.a *.lo *.a core a.out test_s test_c install-prc$(EXT) pilot-debug$(EXT)
	$(RM) -r .libs
	$(RM) $(EXECS) validate
	$(RM) pilot.rom pilot2.rom libtool
	$(SUBMAKE_COMM) clean
	$(SUBMAKE_COMM_CC) clean
	
