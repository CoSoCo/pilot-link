
## If you want to make pilot-debug, and have Tcl >= 7.5, then uncomment the
## following three lines and correct the library and include paths to match
## what is needed on your system

#PDEXE = pilot-debug$(EXT)
#TCLLIBS  = -L/usr/local/tcl7.5/lib -ltcl7.5 -ldl -lm
#TCLDEFS  = -I/usr/local/tcl7.5/include

## You may uncomment the TK lines below if you have Tk >= 4.1, though Tk is
## not required, either for compilation or execution.

#TKLIBS  = -L/usr/local/tcl7.5/lib -L/usr/X11/lib -ltk4.1 -lX11
#TKDEFS  = -DTK -I/usr/local/tcl7.5/include

## If you have GNU readline 2.0 (all other versions not presently supported)
## you may compile much better command-line support into pilot-debug by
## uncommenting these lines, correcting the libraries and paths if needed.

#RLLIBS  = -lreadline -ltermcap
#RLDEFS  = -DREADLINE_2_0

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
pixdir = ${libdir}/pix
includedir = @includedir@
mandir = @mandir@
srcdir = ./
VPATH = ./

CC = gcc
CXX = g++
CFLAGS = -g -O2 -fno-strength-reduce -Wall -DLIBDIR=\"$(libdir)\" -I./include -I$(srcdir)/include
# -DDEBUG
CXXFLAGS = -g -O2 -fno-strength-reduce -Wall -DLIBDIR=\"$(libdir)\" -I./include -I$(srcdir)/include
LIBS = -lsocket -los2
# -lefence

libcclib = libcc/libpicc.a
cclib = libpicc.a

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
YACC = bison -y
RANLIB = ar -s
RM = rm -f
STRIP = strip
SHELL = /bin/sh
CPLIB = cp
EXT = .EXE
SUBMAKE_COMM = $(MAKE) -C libsock -f Makefile.os2
SUBMAKE_COMM_CC = $(MAKE) -C libcc -f Makefile.os2

CCEXECS = ccexample$(EXT)

EXECS = pilot-xfer$(EXT) pilot-file$(EXT) pilot-dedupe$(EXT) $(PDEXE) pilot-schlep$(EXT)\
		install-memo$(EXT) install-user$(EXT)\
		install-todos$(EXT) pilot-addresses$(EXT)\
		read-ical$(EXT) pilot-mail$(EXT) read-expenses$(EXT)\
		sync-memodir$(EXT) sync-ical$(EXT)\
	    reminders$(EXT) memos$(EXT) addresses$(EXT) read-todos$(EXT)\
		debugsh$(EXT) dlpsh$(EXT) \
		getrom$(EXT) \
		test-connector$(EXT) test-acceptor$(EXT) \
		$(CCEXECS)

PILIBS = libpisock.a
PICCLIBS = $(PILIBS) libpicc.a

all: submake $(EXECS)

submake libsock/libpisock.a $(libcclib):
	$(SUBMAKE_COMM)
	$(SUBMAKE_COMM_CC)

libpisock.a: libsock/libpisock.a
	$(CPLIB) libsock/libpisock.a libpisock.a

libpicc.a: libcc/libpicc.a
	$(CPLIB) libcc/libpicc.a libpicc.a

installdirs:
	$(SHELL) ${srcdir}/scripts/mkinstalldirs $(bindir) $(includedir) $(libdir) $(pixdir)

install: $(EXECS) installdirs libpisock.a
	for p in $(EXECS); do \
		$(INSTALL_PROGRAM) $$p $(bindir)/$$p; \
		$(STRIP) $(bindir)/$$p; \
	done
	for h in include/*.h $(srcdir)/include/*.h; do \
		$(INSTALL_DATA) $$h $(includedir)/`basename $$h`; \
	done
	for p in pix/*.gif pix/*.xbm; do \
		$(INSTALL_DATA) $$p $(pixdir)/`basename $$p`; \
	done
	$(INSTALL_DATA) libpisock.a $(libdir)/libpisock.a
	$(RANLIB) $(libdir)/libpisock.a
	if test -f libpicc.a; then \
		$(INSTALL_DATA) libpicc.a $(libdir)/libpicc.a; \
		$(RANLIB) $(libdir)/libpicc.a; \
	fi

uninstall: $(EXECS)
	-for p in $(EXECS) pilot-debug; do \
		$(RM) $(bindir)/$$p; \
	done
	-rmdir $(bindir)
	-for h in include/*; do \
		$(RM) $(includedir)/`basename $$h`; \
	done
	-rmdir $(includedir)
	-$(RM) $(libdir)/libpisock.a
	-$(RM) $(libdir)/libpicc.a
	-rmdir $(libdir)

install-memo$(EXT): $(PILIBS) install-memo.o
	$(CC) $(CFLAGS) install-memo.o $(PILIBS) -o $@ $(LIBS)

install-todos$(EXT): $(PILIBS) install-todos.o
	$(CC) $(CFLAGS) install-todos.o $(PILIBS) -o $@ $(LIBS)

pilot-addresses$(EXT): $(PILIBS) pilot-addresses.o
	$(CC) $(CFLAGS) pilot-addresses.o $(PILIBS) -o $@ $(LIBS)

pilot-dedupe$(EXT): $(PILIBS) pilot-dedupe.o
	$(CC) $(CFLAGS) pilot-dedupe.o $(PILIBS) -o $@ $(LIBS)

install-user$(EXT): $(PILIBS) install-user.o
	$(CC) $(CFLAGS) install-user.o $(PILIBS) -o $@ $(LIBS)

pilot-xfer$(EXT): $(PILIBS) pilot-xfer.o
	$(CC) $(CFLAGS) pilot-xfer.o $(PILIBS) -o $@ $(LIBS)

pilot-schlep$(EXT): $(PILIBS) pilot-schlep.o
	$(CC) $(CFLAGS) pilot-schlep.o $(PILIBS) -o $@ $(LIBS)

pilot-mail$(EXT): $(PILIBS) pilot-mail.o parsedate.o
	$(CC) $(CFLAGS) pilot-mail.o parsedate.o $(PILIBS) -o $@ $(LIBS)

pilot-file$(EXT): $(PILIBS) pilot-file.o
	$(CC) $(CFLAGS) pilot-file.o $(PILIBS) -o $@ $(LIBS)

pilot-debug.o: $(PILIBS) pilot-debug.c Makefile
	$(CC) $(CFLAGS) $(TCLDEFS) $(TKDEFS) -c pilot-debug.c

pd-tty.o: $(PILIBS) pd-tty.c Makefile
	$(CC) $(CFLAGS) $(TCLDEFS) $(TKDEFS) $(RLDEFS) -c pd-tty.c

pilot-debug$(EXT): $(PILIBS) pilot-debug.o pd-tty.o
	$(CC) $(CFLAGS) pilot-debug.o pd-tty.o $(PILIBS) -o $@ $(TKLIBS) $(TCLLIBS) $(RLLIBS) $(LIBS)

reminders$(EXT): $(PILIBS) reminders.o
	$(CC) $(CFLAGS) reminders.o $(PILIBS) -o $@ $(LIBS)

memos$(EXT): $(PILIBS) memos.o
	$(CC) $(CFLAGS) memos.o $(PILIBS) -o $@ $(LIBS)

read-todos$(EXT): $(PILIBS) read-todos.o
	$(CC) $(CFLAGS) read-todos.o $(PILIBS) -o $@ $(LIBS)

read-expenses$(EXT): $(PILIBS) read-expenses.o
	$(CC) $(CFLAGS) read-expenses.o $(PILIBS) -o $@ $(LIBS)

read-ical$(EXT): $(PILIBS) read-ical.o
	$(CC) $(CFLAGS) read-ical.o $(PILIBS) -o $@ $(LIBS)

sync-memodir$(EXT): $(PILIBS) sync-memodir.o
	$(CC) $(CFLAGS) sync-memodir.o $(PILIBS) -o $@ $(LIBS)

sync-ical$(EXT): $(PILIBS) sync-ical.o
	$(CC) $(CFLAGS) sync-ical.o $(PILIBS) -o $@ $(LIBS)

addresses$(EXT): $(PILIBS) addresses.o
	$(CC) $(CFLAGS) addresses.o $(PILIBS) -o $@ $(LIBS)

test-connector$(EXT): $(PILIBS) test-connector.o
	$(CC) $(CFLAGS) test-connector.o $(PILIBS) -o $@ $(LIBS)

test-acceptor$(EXT): $(PILIBS) test-acceptor.o
	$(CC) $(CFLAGS) test-acceptor.o $(PILIBS) -o $@ $(LIBS)

dlpsh$(EXT): $(PILIBS) dlpsh.o
	$(CC) $(CFLAGS) dlpsh.o $(PILIBS) -o $@ $(LIBS)

debugsh$(EXT): $(PILIBS) debugsh.o
	$(CC) $(CFLAGS) debugsh.o $(PILIBS) -o $@ $(LIBS)

ccexample$(EXT): $(PICCLIBS) ccexample.o
	$(CXX) $(CXXFLAGS) ccexample.o $(PICCLIBS) -o $@ $(LIBS)

validate$(EXT): $(PICCLIBS) validate.o
	$(CXX) $(CXXFLAGS) validate.o $(PICCLIBS) -o $@ $(LIBS)

getrom$(EXT): $(PILIBS) getrom.o
	$(CC) $(CFLAGS) getrom.o $(PILIBS) -o $@ $(LIBS)

parsedate.c: parsedate.y
	@echo Expect six shift/reduce conflicts
	$(YACC) parsedate.y
	mv y.tab.c parsedate.c

strip: $(EXECS)
	$(STRIP) $(EXECS)

distclean: clean
	$(SUBMAKE_COMM) depend
	$(SUBMAKE_COMM_CC) depend
	$(RM) Makefile libsock/Makefile libsock/Makefile.in~ include/pi-config.h
	$(RM) libcc/Makefile libcc/Makefile.in~
	$(RM) config.log config.status config.cache
	$(RM) PiDebug.log 
	$(RM) *~ *.orig */*~ */*.orig
	perl scripts/os2dist.pl

clean:
	$(RM) *.o *.a core a.out test_s test_c install-prc$(EXT) pilot-debug$(EXT)
	$(RM) $(EXECS) validate
	$(RM) pilot.rom
	$(SUBMAKE_COMM) clean
	$(SUBMAKE_COMM_CC) clean
