# This is free software, licensed under the GNU Public License V2.
# See the file COPYING for details.
AC_INIT(include/pi-cmp.h)
AM_CONFIG_HEADER(config.h)

dnl ******************************
dnl Pilot Link Version
dnl ******************************
PILOT_LINK_VERS=0
PILOT_LINK_MAJOR=10
PILOT_LINK_MINOR=99
PILOT_LINK_PATCH=

AC_SUBST(PILOT_LINK_VERS)
AC_SUBST(PILOT_LINK_MAJOR)
AC_SUBST(PILOT_LINK_MINOR)
AC_SUBST(PILOT_LINK_PATCH)
VERSION="$PILOT_LINK_VERS.$PILOT_LINK_MAJOR.$PILOT_LINK_MINOR$PILOT_LINK_PATCH"

dnl ******************************
dnl Pilot Link Library Version
dnl ******************************
PISOCK_CURRENT=5
PISOCK_REVISION=0
PISOCK_AGE=0

AC_SUBST(PISOCK_CURRENT)
AC_SUBST(PISOCK_REVISION)
AC_SUBST(PISOCK_AGE)

dnl ******************************
dnl Pilot Link Sync Library Version
dnl ******************************
PISYNC_CURRENT=0
PISYNC_REVISION=0
PISYNC_AGE=0

AC_SUBST(PISYNC_CURRENT)
AC_SUBST(PISYNC_REVISION)
AC_SUBST(PISYNC_AGE)

dnl ******************************
dnl Pilot Link C++ Library Version
dnl ******************************
PISOCKPP_CURRENT=0
PISOCKPP_REVISION=0
PISOCKPP_AGE=0

AC_SUBST(PISOCKPP_CURRENT)
AC_SUBST(PISOCKPP_REVISION)
AC_SUBST(PISOCKPP_AGE)

AM_INIT_AUTOMAKE(pilot-link, [$VERSION])

dnl Check host type
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AM_PROG_LIBTOOL
AC_PROG_YACC

dnl ******************************
dnl Pilot Link Checks 
dnl ******************************
AC_HEADER_STDC
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL

AC_CHECK_HEADERS(fcntl.h malloc.h sys/ioctl.h sys/time.h sys/ioctl_compat.h memory.h string.h strings.h unistd.h stdlib.h netinet/in.h dirent.h sys/ndir.h sys/dir.h ndir.h sys/select.h sockio.h netdb.h sys/utsname.h)
AC_CHECK_FUNCS(atexit strchr strdup memcpy memmove strtoul cfmakeraw cfsetspeed cfsetispeed cfsetospeed sigaction dup2 inet_aton gethostname uname putenv)

dnl Find optional libraries (borrowed from Tcl)
tcl_checkBoth=0
AC_CHECK_FUNC(connect, tcl_checkSocket=0, tcl_checkSocket=1)
if test "$tcl_checkSocket" = 1; then
    AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", tcl_checkBoth=1)
fi
if test "$tcl_checkBoth" = 1; then
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, tcl_checkNsl=0, [LIBS=$tk_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))
AC_CHECK_LIB(inet, main, [LIBS="$LIBS -linet"])

AC_CACHE_CHECK([for cispeed and cospeed members of struct termios],
  ac_cv_termios_cspeed,
[AC_TRY_COMPILE([#include <termios.h>], [int main(void) {
 struct termios t;t.c_ispeed=t.c_ospeed=0;}],
  ac_cv_termios_cspeed=yes,ac_cv_termios_cspeed=no)])
if test $ac_cv_termios_cspeed = yes; then
  AC_DEFINE(TERMIOS_CSPEED)
fi

dnl ******************************
dnl USB Support
dnl ******************************
msg_usb=no
case "$host" in
	*linux*)
		AM_CONDITIONAL(WITH_LINUXUSB, true)
		AC_DEFINE(HAVE_USB)
		msg_usb=yes
	;;
	*freebsd*)
		AM_CONDITIONAL(WITH_FREEBSDUSB, true)
		AC_DEFINE(HAVE_USB)
		msg_usb=yes
	;;
esac

dnl ******************************
dnl getopt
dnl ******************************
LIBOBJS="$LIBOBJS getopt.o getopt1.o"
AC_SUBST(LIBOBJS)

dnl ******************************
dnl iconv checking
dnl ******************************
have_iconv=no
AC_ARG_WITH(libiconv, [  --with-libiconv         Prefix where libiconv is installed])
case $withval in
/*)
    ICONV_CFLAGS="-I$withval/include"
    ICONV_LIBS="-L$withval/lib"
    ;;
esac

save_CFLAGS="$CFLAGS"
save_LDFLAGS="$LDFLAGS"
CFLAGS="$CFLAGS $ICONV_CFLAGS"
LDFLAGS="$LDFLAGS $ICONV_LIBS"
AC_CHECK_LIB(iconv, libiconv, [have_iconv=yes; ICONV_LIBS="$ICONV_LIBS -liconv"], [
    AC_CHECK_FUNC(iconv, [
	AC_CHECK_FUNCS(gnu_get_libc_version)
	AC_MSG_CHECKING(if system iconv handles CP1252)
	AC_TRY_RUN([
#include <iconv.h>
#include <stdlib.h>
#include <string.h>
#ifdef HAVE_GNU_GET_LIBC_VERSION
#include <gnu/libc-version.h>
#endif

int main (int argc, char **argv)
{
	const char *pc = "\x66\x66\x66\x66\x66\x66\x66\xA9";
	const char *utf8 = "\x66\x66\x66\x66\x66\x66\x66\xC2\xA9";
	char transbuf[10], *trans = transbuf;
	iconv_t cd;
	size_t pc_len = strlen (pc), utf8_len = 10;
	size_t utf8_real_len = strlen (utf8);

	cd = iconv_open ("UTF-8", "CP1252");
	if (!cd)
		exit (1);
	if (iconv (cd, &pc, &pc_len, &trans, &utf8_len) == -1 || pc_len != 0)
		exit (1);
	if (memcmp (utf8, transbuf, utf8_real_len) != 0)
		exit (1);

	exit (0);
}], AC_MSG_RESULT(yes); have_iconv=yes, [AC_MSG_RESULT(no);], AC_MSG_RESULT(not cross compiling);)])])

dnl ##  Fixed AC_TRY_RUN warning, missing third argument. -DD 22/01/2002
dnl
dnl 	AC_TRY_RUN is a macro that's basically like an if-then-else structure. If
dnl 	the test program (whose text is the first argument) succeeds, the second
dnl 	argument is executed; if the test fails, the third argument is executed; and
dnl 	if autoconf knows it is cross-compiling for another machine and therefore
dnl 	can't run a test program at all, it doesn't try but just executes the fourth
dnl 	argument.  Usually that last alternative should be the most conservative
dnl 	assumption.

CFLAGS="$save_CFLAGS"
LDFLAGS="$save_LDFLAGS"

if test "$have_iconv" = yes; then
	AC_DEFINE(HAVE_ICONV)
	msg_iconv=yes
else
	msg_iconv=no
fi
AC_SUBST(ICONV_CFLAGS)
AC_SUBST(ICONV_LIBS)

dnl ******************************
dnl readline checking
dnl ******************************
msg_readline=no
AC_ARG_WITH(readline,      [  --with-readline    use readline [default=yes]])
if test "x$with_readline" != "xno"; then
	AC_MSG_CHECKING(for readline)

	ac_save_LIBS="$LIBS"
	LIBS="$LIBS -lreadline"
	AC_TRY_LINK(,[(void)readline(0);], RL_LIBS="-lreadline",
		LIBS="$LIBS -ltermcap"
		AC_TRY_LINK(,[(void)readline(0);], RL_LIBS="-lreadline -ltermcap"))
	LIBS="$ac_save_LIBS"

	if test "x$RL_LIBS" = "x"; then
		AC_MSG_RESULT(not found)
	else
		AC_MSG_RESULT(found)
	fi
fi

if test "x$RL_LIBS" != "x"; then
	AC_MSG_CHECKING(for basic readline functions)

	ac_save_LIBS="$LIBS"

	LIBS="$LIBS $RL_LIBS"
	AC_TRY_LINK([
#include <stdio.h>
#include <readline/readline.h>], [
char *line; 
line = readline("prompt");], 
	[AC_TRY_LINK([
#include <stdio.h>
#include <readline/history.h>], [
add_history("test");],
	[msg_readline=partial])])

	LIBS="$ac_save_LIBS"

	if test "xmsg_readline" = "xno"; then
		AC_MSG_RESULT(no)
	else
		AC_MSG_RESULT(yes)
	fi
fi
if test "x$msg_readline" != "xno"; then
	AC_MSG_CHECKING(for extra readline functions)

	ac_save_LIBS="$LIBS"

	LIBS="$LIBS $RL_LIBS"
	AC_TRY_LINK([
#include <stdio.h>
#include <readline/readline.h>], [
rl_callback_read_char();], 
	[AC_TRY_LINK([
#include <stdio.h>
#include <readline/readline.h>], [
static void execline(char *line)
{}
rl_callback_handler_install("prompt", execline);],
	[AC_TRY_LINK([
#include <stdio.h>
#include <readline/readline.h>], [
rl_callback_handler_remove();],
	[AC_TRY_LINK([
#include <stdio.h>
#include <readline/readline.h>], [
rl_forced_update_display();],
	[msg_readline=complete])])])])

	LIBS="$ac_save_LIBS"

	if test "x$msg_readline" != "xcomplete"; then
		AC_MSG_RESULT(no)
	else
		AC_MSG_RESULT(yes)
	fi
fi

if test "x$msg_readline" = "xpartial"; then
	AC_DEFINE(HAVE_READLINE)
fi
if test "x$msg_readline" = "xcomplete"; then
	AC_DEFINE(HAVE_READLINE)
	AC_DEFINE(HAVE_READLINE_EXTRA)
fi
AC_SUBST(RL_CFLAGS)
AC_SUBST(RL_LIBS)

dnl ******************************
dnl C++
dnl ******************************
use_cpp=false
msg_cpp=no
AC_ARG_WITH(cpp,      [  --with-cpp[=c++ compiler]  use C++     [default=yes]])
if test "x$with_cpp" != "xno"; then
	AC_PROG_CXX
	use_cpp=true
fi
AM_CONDITIONAL(WITH_CXX, $use_cpp)
if $use_cpp; then
	msg_cpp=yes
fi

dnl ******************************
dnl Perl
dnl ******************************
use_perl5=false
msg_perl=no
AC_ARG_WITH(perl5,    [  --with-perl5=perl5exec  use Perl5   [default=yes]])
if test "x$with_perl5" = "xno"; then
	PERL5=''
else
	if test "x$with_perl5" != "xyes" && test "x$with_perl5" != "x"; then
		PERL5="$with_perl5"
	else
		AC_PATH_PROG(PERL5, perl)
	fi
fi

if test "x$PERL5" != "x"; then
	AC_MSG_CHECKING(perl version)
	verstxt=`$PERL5 -e 'print $]'`
        vers=`echo "$verstxt" | awk -F. '{ printf "%d", ($1 * 1000);}'`
	if test "$vers" -ge 5000; then
		if test "$vers" -lt 6000; then
			AC_MSG_RESULT($verstxt)
			PERLVER=$verstxt
			use_perl5=true
		else
			AC_MSG_RESULT($verstext [perl 5 not found])
			use_perl5=false
		fi
	else
		AC_MSG_RESULT($verstext [perl 5 not found])
	fi
fi
AM_CONDITIONAL(WITH_PERL, $use_perl5)
if $use_perl5; then
	msg_perl=yes
fi
AC_SUBST(PERL5)

dnl ******************************
dnl Java
dnl ******************************
use_java=false
msg_java=no
AC_ARG_WITH(java,     [  --with-java=jdkbase     use Java    [default=yes]])
if test "x$with_java" != "xno"; then
	AC_PATH_PROG(JAVAC, javac, , $with_java/bin:$PATH)
	AC_PATH_PROG(JAVA, java, , $with_java/bin:$PATH)
	AC_PATH_PROG(JAR, jar, ,$with_java/bin:$PATH)
fi
if test "x$JAVA" != "x" && test "x$JAVAC" != "x" && test "x$JAR" != "x"; then
	AC_MSG_CHECKING(for Java Development Kit)
	JAVABASE=`echo "$JAVAC" | sed -e "s/\/bin\/javac//"`
	if test -f "$JAVABASE/include/jni.h"; then
		use_java=true
		AC_MSG_RESULT(looks good) 
	else
		AC_MSG_RESULT(not usable) 
	fi
fi
AM_CONDITIONAL(WITH_JAVA, $use_java)
if $use_java; then
	msg_java=yes
fi
AC_SUBST(JAVA)
AC_SUBST(JAVAC)
AC_SUBST(JAR)
AC_SUBST(JAVABASE)	

dnl ******************************
dnl TCL/ITCL/TK
dnl ******************************
use_tcl=false
msg_tcl=no
use_itcl=false
msg_itcl=no
use_tk=false
msg_tk=no

AC_ARG_WITH(tcl,      [  --with-tcl=tclbasedir   use Tcl     [default=yes]])
AC_ARG_WITH(itcl,     [  --with-itcl=iclbasedir  use ITcl    [default=yes]])
AC_ARG_WITH(tk,       [  --with-tk=tkbasedir     use Tk      [default=yes]])
if test "x$with_tcl" = "xyes" || test "x$with_tcl" = "x" ; then
		for tcl_path in /usr /usr/local /usr/lib/tcl8.3 /usr/local/tcl8.4 /usr/local/tcl8.3 /usr/local/tcl8.0 /usr/local/tcl7.6 /usr/local/tcl7.5 /usr/local/tcl7.4; do
		if test -f $tcl_path/lib/tclConfig.sh; then
			with_tcl=$tcl_path; break
		elif test -f $tcl_path/lib/itcl/tclConfig.sh; then
			itcl='/itcl'
			with_tcl=$tcl_path; break
		fi
	done
	if test "x$with_tcl" = "xyes"; then
		echo "Unable to find Tcl base installation directory."
		echo "Please give directory (such as /usr/local) as argument to --with-tcl=dir."
		with_tcl=no
	fi
else
	if test -f $with_tcl/lib/itcl/tclConfig.sh; then
		itcl='/itcl'
	fi
fi 

AC_MSG_CHECKING(for Tcl)
if test "x$with_tcl" = "x"; then
	AC_MSG_RESULT(not found)
elif test "x$with_tcl" = "xno"; then
	AC_MSG_RESULT(not used)
else
	tclConfig="$with_tcl/lib$itcl/tclConfig.sh"
	if test ! -f $tclConfig; then
		AC_MSG_RESULT(Unable to find tclConfig.sh)
	else
		. $tclConfig
		AC_MSG_RESULT(version $TCL_VERSION from $tclConfig)
		TCL_INC="-I$TCL_PREFIX/include$itcl"
		TCL_BIN="$TCL_EXEC_PREFIX/bin"
		TCLLIBS="$TCL_LIB_SPEC $TCL_LIBS"
		TCLTKLIBS="$TCLLIBS"
		TCLTK_LIBS="\$(TCL_LIB_SPEC) \$(TCL_LIBS)"
		TCLTK_FLAGS="-DTCL \$(TCL_INC)"
		TCLTKFLAGS="-DTCL $TCL_INC"
		DEBIAN_TCL="\$(TCL_INC)/tcl"
		DEBIANTCL="$TCL_INC/tcl"
		use_tcl=true
		
		if test "x$with_itcl" = "xyes" || test "x$with_itcl" = "x"; then
			for itcl_path in $with_tcl; do
				if test -f $itcl_path/lib$itcl/itclConfig.sh; then
					with_itcl=$itcl_path; break
				fi
			done
			if test "x$with_itcl" = "xyes"; then
				echo "Unable to find Itcl base installation directory."
				echo "Please give directory (such as /usr/local/itcl2.2) as argument to --with-itcl=dir."
				with_itcl=no
			fi
		fi 

		AC_MSG_CHECKING(for Itcl)
		if test "x$with_itcl" = "x"; then
			AC_MSG_RESULT(not found)
		elif test "x$with_itcl" = "xno"; then
			AC_MSG_RESULT(not used)
		else
			itclConfig="$with_itcl/lib$itcl/itclConfig.sh"
			if test ! -f $itclConfig; then
				AC_MSG_RESULT(Unable to find itclConfig.sh)
			else
				. $itclConfig
				AC_MSG_RESULT(version $ITCL_VERSION from $itclConfig)
				ITCL_INC="-I$TK_PREFIX/include$itcl"
				#TK_BIN="$TK_EXEC_PREFIX/bin"
				#TKLIBS="$TK_LIB_SPEC $TCL_LIB_SPEC $TK_LIBS"
				#TCLTK_LIBS="\$(TK_LIB_SPEC) \$(TCL_LIB_SPEC) \$(TK_LIBS)"
				#TCLTK_FLAGS="$TCLTK_FLAGS -DTK \$(TK_INC)"
				#TCLTKLIBS="$TKLIBS"
				use_itcl=true
				if test "x$ITCL_INC" = "x$TCL_INC"; then
					ITCL_INC=" #same as TCL_INC"
					TCLTKFLAGS="-DTCL -DTK $TCL_INC $DEBIANTCL"
				else
					TCLTKFLAGS="-DTCL -DTK $TCL_INC $DEBIANTCL $TK_INC"
				fi
			fi
		fi

		if test "x$with_tk" = "xyes" || test "x$with_tk" = "x"; then
			for tk_path in $with_tcl; do
				if test -f $tk_path/lib$itcl/tkConfig.sh; then
					with_tk=$tk_path; break
				fi
			done
			if test "x$with_tk" = "xyes"; then
				echo "Unable to find Tk base installation directory."
				echo "Please give directory (such as /usr/local) as argument to --with-tk=dir."
				with_tk=no
			fi
		fi 
		
		AC_MSG_CHECKING(for Tk)
		if test "x$with_tk" = "x"; then
			AC_MSG_RESULT(not found)
		elif test "x$with_tk" = "xno"; then
			AC_MSG_RESULT(not used)
		else
			tkConfig="$with_tk/lib$itcl/tkConfig.sh"
			if test ! -f $tkConfig; then
				AC_MSG_RESULT(Unable to find tkConfig.sh)
			else
				. $tkConfig
				AC_MSG_RESULT(version $TK_VERSION from $tkConfig)
				TK_INC="-I$TK_PREFIX/include$itcl"
				TK_BIN="$TK_EXEC_PREFIX/bin"
				TKLIBS="$TK_LIB_SPEC $TCL_LIB_SPEC $TK_LIBS"
				TCLTK_LIBS="\$(TK_LIB_SPEC) \$(TCL_LIB_SPEC) \$(TK_LIBS)"
				TCLTK_FLAGS="$TCLTK_FLAGS -DTK \$(TK_INC)"
				TCLTKLIBS="$TKLIBS"
				use_tk=true
				if test "x$TK_INC" = "x$TCL_INC"; then
					TK_INC=" #same as TCL_INC"
					TCLTKFLAGS="-DTCL -DTK $TCL_INC $DEBIANTCL"
				else
					TCLTKFLAGS="-DTCL -DTK $TCL_INC $DEBIANTCL $TK_INC"
				fi
			fi
		fi


	fi
fi

TCL_PACKAGE_PATH=`echo $TCL_PACKAGE_PATH | sed 's/ .*//'`

AM_CONDITIONAL(WITH_TCL, $use_tcl)
if $use_tcl; then
	msg_tcl=yes
fi
AM_CONDITIONAL(WITH_ITCL, $use_itcl)
if $use_itcl; then
	msg_itcl=yes
fi
AM_CONDITIONAL(WITH_TK, $use_tk)
if $use_tk; then
	msg_tk=yes
fi
AC_SUBST(TCL_VERSION)
AC_SUBST(TCL_LIBS)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TCL_PACKAGE_PATH)
AC_SUBST(TCL_INC)
AC_SUBST(TCL_BIN)
AC_SUBST(TK_VERSION)
AC_SUBST(TK_LIBS)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TK_INC)
AC_SUBST(TK_BIN)
AC_SUBST(TCLTK_LIBS)
AC_SUBST(TCLTK_FLAGS)
AC_SUBST(TCLLIBS)
AC_SUBST(TKLIBS)
AC_SUBST(TCLTKLIBS)
AC_SUBST(TCLTKFLAGS)
AC_SUBST(DEBIAN_TCL)
AC_SUBST(DEBIANTCL)

TCLEXECS=''
if test ! "x$TCL_VERSION" = "x"; then
	TCLEXECS='pilot-debug$(EXT)'
fi
AC_SUBST(TCLEXECS)

dnl ******************************
dnl Python
dnl ******************************
use_python=false
msg_python=no
AC_ARG_WITH(python,   [  --with-python=pylibbase use Python  [default=yes]])

if test "x$with_python" != "xno"; then
        AC_PATH_PROGS(PYTHON, [python2 python])
	if test "x$PYTHON" != "x"; then
		use_python=true
	fi
fi
if $use_python; then
	AC_MSG_CHECKING(python development kit)

	PYTHONVER=[`$PYTHON -c "import sys, string; print string.split(sys.version)[0]"`]
	if `$PYTHON -c "from distutils.core import setup, Extension;" > /dev/null 2>&1`; then
		use_python=true
		AC_MSG_RESULT(looks good)
	else
		use_python=false
		AC_MSG_RESULT(not usable)
	fi
fi
AM_CONDITIONAL(WITH_PYTHON, $use_python)
if $use_python; then
	msg_python=yes
fi
AC_SUBST(PYTHON)

dnl *************************************
dnl Runtime debugging
dnl *************************************
AC_ARG_ENABLE(debug,
	      [  --disable-debug  Squash runtime debugging],
	      set_debug=no)

if test "$set_debug" != "no"; then
	AC_DEFINE(PI_DEBUG)
fi

dnl *************************************
dnl Extra warnings
dnl *************************************
AC_ARG_ENABLE(more-warnings,
	      [  --disable-more-warnings  Inhibit compiler warnings],
	      set_more_warnings=no)

if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	CFLAGS="$CFLAGS \
		-Wall -Wstrict-prototypes -Wmissing-declarations \
		-Wmissing-prototypes -Wnested-externs -Wpointer-arith"
else 
	case "$host" in
		*irix*)	CFLAGS="$CFLAGS -fullwarn" ;
	esac
fi

case "$host" in
	*bsd*)
		AC_DEFINE(TTYPrompt, "/dev/cua[<0..n>]")
	;;
	*)
		AC_DEFINE(TTYPrompt, "/dev/tty[<0..n>]")
	;;
esac

AC_OUTPUT([
Makefile
pilot-link.m4
libpisock/Makefile
libpisync/Makefile
libpisock++/Makefile
include/Makefile
include/pi-version.h
src/Makefile
src/prc/Makefile
src/pix/Makefile
bindings/Makefile
bindings/Perl/Makefile.PL
bindings/Java/Makefile
doc/Makefile
doc/man/Makefile
tests/Makefile
])

echo "
  pilot-link $VERSION
  
  Direct USB support.. : $msg_usb

  C++ support......... : $msg_cpp
  Iconv support....... : $msg_iconv
  Readline support.... : $msg_readline

  TCL support......... : $msg_tcl	($TCL_VERSION)
  ITCL support........ : $msg_itcl	($ITCL_VERSION)
  TK Support.......... : $msg_tk	($TK_VERSION)

  Java support........ : $msg_java	
  Python support...... : $msg_python	($PYTHONVER)
  Perl support........ : $msg_perl	($PERLVER)
"
