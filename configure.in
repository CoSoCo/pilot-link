
# This is free software, licensed under the GNU Public License V2.
# See the file COPYING for details.

dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/pi-cmp.h)
AC_CONFIG_AUX_DIR(scripts)

dnl Check host type
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC

AC_CHECK_PROGS(CXX, $CCC c++ g++ gcc CC cxx cc++, gcc)

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_CACHE_CHECK([whether C++ compiler ($CXX $CXFLAGS $LDFLAGS) works],
  ac_cv_prog_cxx_works,
[AC_TRY_COMPILE([#include <stdio.h>], [class a { public: int b; a::a(void); };
a b; ],
  ac_cv_prog_cxx_works=yes,ac_cv_prog_cxx_works=no)])
AC_LANG_RESTORE

AC_PROG_CXX_GNU

if test $ac_cv_prog_gxx = yes; then
  GXX=yes
dnl Check whether -g works, even if CXXFLAGS is set, in case the package
dnl plays around with CXXFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CXXFLAGS="${CXXFLAGS+set}"
  ac_save_CXXFLAGS="$CXXFLAGS"
  CXXFLAGS=
  AC_PROG_CXX_G
  if test "$ac_test_CXXFLAGS" = set; then
    CXXFLAGS="$ac_save_CXXFLAGS"
  elif test $ac_cv_prog_cxx_g = yes; then
    CXXFLAGS="-g -O2"
  else
    CXXFLAGS="-O2"
  fi
else
  GXX=
  test "${CXXFLAGS+set}" = set || CXXFLAGS="-g"
fi

ccexecs=''
cclib=''
libcclib=''
SUBMAKE_COMM='cd libsock ; $(MAKE) '
SUBMAKE_COMM_CC='-true'
EXT=''
CXXLIBS=''
if test $ac_cv_prog_cxx_works = yes; then
  ccexecs='$(CCEXECS)'
  cclib='libpicc.a'
  libcclib='libcc/libpicc.a'
  SUBMAKE_COMM_CC='cd libcc ; $(MAKE) '
fi
AC_SUBST(ccexecs)
AC_SUBST(cclib)
AC_SUBST(libcclib)
AC_SUBST(SUBMAKE_COMM)
AC_SUBST(SUBMAKE_COMM_CC)
AC_SUBST(EXT)
AC_SUBST(CXXLIBS)


dnl Checks for libraries.


if test $ac_cv_prog_cxx_works = yes; then
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
  if test $ac_cv_prog_gxx = yes; then
    AC_CHECK_LIB(g++, main, CXXLIBS="$CXXLIBS -lg++")
  fi
  AC_LANG_RESTORE
fi
AC_CHECK_LIB(m, ldexp, LIBS="$LIBS -lm")
AC_CHECK_LIB(PW, alloca, LIBS="$LIBS -lPW")

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h malloc.h sys/ioctl.h sys/time.h sys/ioctl_compat.h memory.h string.h strings.h unistd.h stdlib.h netinet/in.h dirent.h sys/ndir.h sys/dir.h ndir.h sys/select.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM

dnl Find optional libraries (borrowed from Tcl)
tcl_checkBoth=0
AC_CHECK_FUNC(connect, tcl_checkSocket=0, tcl_checkSocket=1)
if test "$tcl_checkSocket" = 1; then
    AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", tcl_checkBoth=1)
fi
if test "$tcl_checkBoth" = 1; then
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, tcl_checkNsl=0, [LIBS=$tk_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))
AC_CHECK_LIB(inet, main, [LIBS="$LIBS -linet"])

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(atexit strchr strdup memcpy memmove strtoul cfmakeraw cfsetspeed cfsetispeed cfsetospeed sigaction dup2)

AC_CACHE_CHECK([for cispeed and cospeed members of struct termios],
  ac_cv_termios_cspeed,
[AC_TRY_COMPILE([#include <termios.h>], [int main(void) {
 struct termios t;t.c_ispeed=t.c_ospeed=0;}],
  ac_cv_termios_cspeed=yes,ac_cv_termios_cspeed=no)])
if test $ac_cv_termios_cspeed = yes; then
  AC_DEFINE(TERMIOS_CSPEED)
fi

dnl Derive warning flag
AC_CACHE_CHECK([for maximum warnings compiler flag],
  ac_cv_cwflag,
[case "${CC-cc}" in
  *gcc*) ac_cv_cwflag=-Wall;;
  *)	case "$host" in
			*irix*)	ac_cv_cwflag=-fullwarn ;;
			*)		ac_cv_cwflag=;;
		esac ;;
esac])
CWFLAG=$ac_cv_cwflag
AC_SUBST(CWFLAG)

CFLAGS="$CFLAGS `perl -e 'use Config; print $Config{cccdlflags}'`"

dnl NeXT support
case "$host" in
    *next*) CPLIB="ln -s"
            ARFLAGS="cur" ;;
    *)      CPLIB="cp"
            ARFLAGS="cur" ;;
esac
AC_SUBST(CPLIB)
AC_SUBST(ARFLAGS)

AC_CONFIG_HEADER(include/pi-config.h)

if test $ac_cv_prog_cxx_works = yes; then
  cc_m='libcc/Makefile'
fi

AC_OUTPUT(libsock/Makefile $cc_m Makefile)
