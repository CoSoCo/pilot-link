
Sorry for not providing decent information here. The basics are:
  
  1) run configure (unless using OS/2). If you want to install in someplace
     other the /usr/local, give configure an argument like '--prefix=/usr/pilot'
    
  2) run make (unless using OS/2, then make -f Makefile.os2)
    
  3) play around, _carefully_. pilot-xfer is probably the most useful
     program for you, and also the safest.
     
  4) run 'make install' if you feel the need.
     
Note on pilot-debug: this program is a work-in-progress, and requires Tcl
7.6 (or greater) and optionally Tk 4.2 (or greater). You'll need to modify
Makefile to compile it (the directions are right at the top.) Currently you
must have installed pilot-link or run pilot-debug in the pilot-link
directory if you want the fancy images for the Remote UI window.

Usage notes:

  read-ical and sync-ical only work if you have ical-2.x installed and
  in the path.

Debugging notes:

  There are several defines mentioned in lib/Makefile that enabled different
  types of debugging information. Possibly the most valuable is SERIAL_TRACE
  which will generate a file called PiDebug.log in the current directory
  containing a complete trace of all serial activity. Please try and mail me
  (kjahds@kjahds.com) such a log if you are having low-level failures.
  
Embedding information:

  As of 0.5.0, I've rearranged the headers slightly so that it should be
  easier and more reliable to use the libpisock.a library in external
  applications.
  
  If you want to use the pilot-link portability layer (configured via
  autoconf), then include pi-source.h. Otherwise, do not touch this file,
  as it sets up a mildly complex environment.
  
  For all normal operations, simply include the obvious files (pi-file for
  .pdb and .prc file access, pi-dlp for DLP sync functions, etc.). pi-macros
  contains the portable byte-access routines.
  
Happy Hacking,
Kenneth Albanowski <kjahds@kjahds.com>