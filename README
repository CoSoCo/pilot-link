Sorry for not providing decent information here. The basics are:

For UNIX and Win32/Cygwin:
-------------------------'
	1.) Run configure. If you want to install in some place other than
	    /usr/local, give configure an argument like:

		$ ./configure --prefix=/home/fred/pilot

	    If you are using a CVS version of pilot-link, you will have to
	    run 'sh ./autogen.sh' instead, which will create configure for
	    you. You will also need to have your development environment set
	    up, which will require such tools as automake, autoconf,
	    libtool, and others to be properly installed and configured.

	2.) If configure ran successfully, you should run 'make' to build
	    the software.

		$ make
	
	3.) Play around in the source directory, CAREFULLY. dlpsh and
	    pilot-xfer are probably the most useful programs for you, and
	    also the safest of all to use non-destructively.
	
	4.) Once you have determined that pilot-link works and suits your
	    needs, su to root to install the conduits, libraries, docs, and
	    headers required for proper operation of pilot-link.

		$ su - root

	    If you wish to include root's environment (recommended), make
	    sure you include the '-' when you su to root.

	5.) Run 'make install' if you you have tested thoroughly and are
	    sure pilot-link works well for you.

		# make install

For OS/2 (serial devices only, USB is unsupported):
--------------------------------------------------'
	1.) Run os2configure.cmd.
	
	2.) Run make -f Makefile.os2
	
	3.) Play around, CAREFULLY. pilot-xfer is probably the most useful
	    program for you, and also the safest of all to use
	    non-destructively. Also dlpsh is a good app to use to poke
	    around in your Palm device.
	
	4.) Run 'make install' if you you have tested thoroughly and are
	    sure pilot-link works well for you.
	
	Note on pilot-debug: This program is a work-in-progress, and
	requires Tcl 7.5 (or greater) and optionally Tk 4.1 (or greater)
	and/or Readline 2.0.  You'll need to modify Makefile to to use
	Readline 2.0, and if your Tcl or Tk aren't in standard places,
	you'll need to wiggle configure or the Makefile.  You must have
	installed pilot-link or else run pilot-debug in the pilot-link
	source directory if you want the fancy images for the Remote UI
	window.


Usage notes:
-----------'
	read-ical and sync-ical will only run if you have ical-2.x installed
	and in the path.
	
	sync-plan is a full syncronization program, though it has some
	interesting quirks and requirements. You must running netplan from
	plan-1.6.1 (probably available at
	<http://www.in-berlin.de/User/bitrot>). Future or later versions may
	work, but I cannot gaurantee this. Sync-plan does _not_ check the
	Palm's user name, so be very careful not to sync two Palms to the
	same Plan database. This will not work in a useful manner, at the
	moment. Sync-plan leaves a file, that has a name starting with
	"pilothash", in the current directory. This file must be present for
	all future syncs between that plan database and that Palm.
	
	As sync-plan is a work in progress, please contact me with any
	problems.
	
	The default connection rate is 9600 baud. You are welcome to try
	higher baud rates (19200, 38400, or 57600) by setting the PILOTRATE
	environment variable, but various machines have various limitations.
	(Be careful about 38400 on a Linux box if you've been using
	setserial to change the multiplier.)
	
	pilot-mail (which requires a Palm with the new Mail application, as
	well as sendmail and/or a POP3 server) is still in the experimental
	stage.  Run with an argument of '-H' for help. While I don't expect
	it to lose data, (and by default mail is kept on both sides, not
	deleted) I can not and will not guarantee that you won't. Please
	back up your UNIX mailbox and Palm mailbox (via pilot-xfer) before
	experimenting.
	
	If you wish, you may easily change the default settings (pop host,
	password, etc.) for pilot-mail by editing the top of pilot-mail.c,
	as well as by setting the environment variables indicated in its
	help.
	
	Scott Grosch's "validate" program is included, and can be made via
	'make validate', but it may not be of use to anyone but Scott.

Debugging notes:
---------------'
	Please see doc/README.debugging for more detailed information
	describing how to debug pilot-link's core protocols and interfaces.

USB Notes:
---------'
	Please see doc/README.usb for more detailed information on USB.
	

FreeBSD Notes:
-------------'
	Please see doc/README.freebsd for more detailed information on
	setting up pilot-link to work with FreeBSD systems.

Embedding information:
---------------------'
	As of 0.5.0, the headers in pilot-link have been rearranged slightly
	so that it should be easier and more reliable to use the libpisock.a
	library in external applications.
	
	If you want to use the pilot-link portability layer (configured via
	autoconf), then include pi-source.h. Otherwise, do not touch this
	file, as it sets up a mildly complex environment.
	
	For all normal operations, simply include the obvious files (pi-file
	for pdb and .prc file access, pi-dlp for DLP sync functions, etc.). 
	pi-macros contains the portable byte-access routines.

Reporting Bugs:
--------------'
	Any bugs you find with pilot-link can be easily reported in the
	online bug-tracking system at http://bugs.pilot-link.org, and can be
	updated, audited, commented on, and resovled from there.
	
	Please check the existing bugs in the system FIRST before reporting
	your bug. There may be an identical report from another user that
	matches your bug. If you find one that is similar, please add a bug
	"note" to that existing report, adding your specific details.

	If your bug is unique, and does not appear in the system, please
	fill out a bug report and remember to be as detailed as possible
	when filling it out. Make sure to include your operating system,
	pilot-link version, Palm handheld type, and version of pilot-link
	that was used to produce the bug. With this information, the
	developers can be well-informed with the information they'll need to
	help try to track down and fix your bug.


License notes:
-------------'
	The utility programs, otherwise known collectively as "conduits"
	(pilot-xfer, sync-plan, etc.) are licensed for use under the GPL.
	For more information, please see COPYING. The librarys (libpisock
	and libcc) and the interpreter bindings (Perl, Python, Java, and
	Tcl) are licensed for use under the LGPL. For more information,
	please see COPYING.LIB.
	
	All contained source is the copyright of its author(s). Please see
	the copyright notices in the individual files for more information.

Basic program list, in no particular order:
------------------------------------------'

	addresses:
		Dump Palm Address book into a generic format

	ccexample:
		Test program demonstrating the C++ interface of pilot-link

	debugsh:
		Command-line interface to Palm debug monitor

	dlpsh:
		Command-line interface to Palm Desktop Link Protocol (DLP)

	getrom:
		Program to fetch ROM using getrom.prc or getrom2.prc

	getrom.prc:
		Palm program to help dump a 512K ROM 

	getrom2.prc:
		Palm conduit to help dump a 1024K ROM (used for OS 2.x to OS
		4.1 ROM images, does not work with OS5 ROM images)

	iambicexample:
		Test program demonstrating the C++ interface of pilot-link

	ietf2datebook:
		Convert IETF calendar to format used by install-datebook

	install-datebook:
		Import Datebook entries from a text format into Palm

	install-expenses:
		Install Expense entries from the commandline

	install-memo:
		Import Memo entries from a text format into Palm

	install-netsync:
		Modify network settings on your Palm device (IP, subnet,
		netmask, hostname)

	install-todo:
		Import ToDo entries from the commandline, one entry at a
		time

	install-todos:
		 Import ToDo records from a text format into Palm, several
		 at a time

	install-user:
		Modify user name settings (and report lots of into) about
		Palm

	memos:
		Export Memos from Palm in standard mailbox format
	
	pi-csd:
		Must be running to accept Network HotSync(tm) connects

	pi-getram:
		Program that retrieves RAM from Palm (does not work with OS5
		ROM images)

	pi-getrom:
		Program that retrieves ROM from Palm (without getrom.prc)

	pi-nredir:
		Program that accepts connections and redirects them via the
		Network HotSync(tm) protocol

	pi-port:
		Experimental program to separate serial layer from
		pilot-link

	pilot-addresses:
		Import and export Address book

	pilot-clip:
		Experimental program to import and export data from Palm
		clipboard
	
	pilot-debug:
		Graphical and command-line program to interface with Palm
		debug monitor

	pilot-dedupe:
		Strips duplicate records from Palm databases

	pilot-file:

		Dissect and view detailed information about .prc (Palm
		Resource Database), .pdb (Palm Record Database), and .pqa
		(Palm Query Application) files

	pilot-mail:
		Import mail from POP3 mailbox into Palm Pro's Mail
		application, and send mail via sendmail (this has been
		deprecated in favor of pilot-mailsync now)

	pilot-schlep:
		Pack up an arbitrary file on the Palm in .prc format, like a
		portable "suitcase" container

	pilot-undelete:
		Turn archived records into normal records

	pilot-xfer:
		Back up, restore, install & delete Palm databases (this is a
		very useful conduit, the most widely used of all of them)

	read-expenses:
		Export Palm Pro Expense database into text format

	read-ical:
		Export Palm Datebook and ToDo databases into an Ical
		calendar (ical is required)

	read-todos:
		Export Palm ToDo database into generic text format

	reminders:
		Export Palm Datebook into a 'remind' data file

	sync-plan
		Completely synchronize the Palm Datebook with the Plan
		calendar via netplan

	validate:
		Experimental program to test C++ features of pilot-link
  
Happy Hacking,
The pilot-link Team

pilot-link was originally written by Kenneth Albanowski <kjahds@kjahds.com>
and others.
