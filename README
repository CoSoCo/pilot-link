
Sorry for not providing decent information here. The basics are:
  
  1) run configure (unless using OS/2). If you want to install in someplace
     other the /usr/local, give configure an argument like '--prefix=/usr/pilot'
    
  2) run make (unless using OS/2, then make -f Makefile.os2)
    
  3) play around, _carefully_. pilot-xfer is probably the most useful
     program for you, and also the safest.
     
  4) run 'make install' if you feel the need.
     
Note on pilot-debug: this program is a work-in-progress, and requires Tcl
7.5 (or greater) and optionally Tk 4.1 (or greater). You'll need to modify
Makefile to compile it (the directions are right at the top.) Currently you
must have installed pilot-link or run pilot-debug in the pilot-link
directory if you want the fancy images for the Remote UI window.

Usage notes:

  read-ical and sync-ical will only run if you have ical-2.x installed and
  in the path.
  
  sync-mail and sync-memodir are useless stubs at the moment.
  
  The default connection rate is 9600 baud. You are welcome to try higher
  baud rates (19200, 38400, or 57600) by setting the PILOTRATE environment
  variable.
  
  pilot-mail (which requires a PalmPilot with the new Mail application, as
  well as sendmail and/or a POP3 server) is still in the experimental stage. 
  Run with an argument of '-H' for help. While I don't expect it to lose
  data, (and by default mail is kept on both sides, not deleted) I can not
  and will not guarantee that you won't. Please back up your UNIX mailbox
  and Pilot mailbox (via pilot-xfer) before experimenting.
  
  If you wish, you may easily change the default settings (pop host,
  password, etc.) for pilot-mail by editing the top of pilot-mail.c, as well
  as by setting the environment variables indicated in its help.

Debugging notes:

  There are several defines mentioned in lib/Makefile that enabled different
  types of debugging information. 
  
  If you are having problems, it may help to generate a log of all serial
  transactions, which I can then parse and attempt to understand. To
  generate such a log, please set the PILOTLOG environment variable (it does
  not matter to what you set it.) This will cause any program using
  pilot-link to append to a log file called "PiDebug.log" in the current
  directory. You may choose another name or directory via the PILOTLOGFILE
  environment variable.
  
  Please mail me (kjahds@kjahds.com) such a log if you are having low-level
  failures.
  
Embedding information:

  As of 0.5.0, I've rearranged the headers slightly so that it should be
  easier and more reliable to use the libpisock.a library in external
  applications.
  
  If you want to use the pilot-link portability layer (configured via
  autoconf), then include pi-source.h. Otherwise, do not touch this file,
  as it sets up a mildly complex environment.
  
  For all normal operations, simply include the obvious files (pi-file for
  .pdb and .prc file access, pi-dlp for DLP sync functions, etc.). pi-macros
  contains the portable byte-access routines.
  
Happy Hacking,
Kenneth Albanowski <kjahds@kjahds.com>